From 531afb134fb3abb53ab3b4e1839b681420a40bc3 Mon Sep 17 00:00:00 2001
From: Devin AI <158243242+devin-ai-integration[bot]@users.noreply.github.com>
Date: Thu, 19 Jun 2025 14:43:40 +0000
Subject: [PATCH] feat: Add child profile management with nickname and gender
 fields

- Add GET/PUT /api/profile endpoints in backend with ID=1 fixed constraint
- Create profileService.ts for API calls following existing patterns
- Update childProfileSlice.ts with async thunks for profile management
- Create ChildProfileForm component with nickname, gender, and birthday fields
- Update App.tsx to use ChildProfileForm instead of ChildBirthdayInput
- Add ChildProfile interface to types.ts
- Update database schema documentation to match existing table
- Maintain backward compatibility with existing birthday functionality

Closes #3

Co-Authored-By: eiko.imai@globis.co.jp <eiko.imai.070502@gmail.com>
---
 backend/server.js                             |  57 +++++++++
 database-schema.sql                           |   9 ++
 frontend/src/App.tsx                          |   4 +-
 .../childProfile/ChildBirthdayInput.tsx       |   2 +-
 .../childProfile/ChildProfileForm.tsx         | 120 ++++++++++++++++++
 .../childProfile/childProfileSlice.ts         |  51 +++++++-
 frontend/src/services/profileService.ts       |  22 ++++
 frontend/src/types.ts                         |   9 ++
 8 files changed, 270 insertions(+), 4 deletions(-)
 create mode 100644 database-schema.sql
 create mode 100644 frontend/src/features/childProfile/ChildProfileForm.tsx
 create mode 100644 frontend/src/services/profileService.ts

diff --git a/backend/server.js b/backend/server.js
index 5b977a8..f96e4de 100644
--- a/backend/server.js
+++ b/backend/server.js
@@ -272,6 +272,63 @@ app.post('/api/achievements/:id/photo', upload.single('photo'), async (req, res)
   }
 });
   
+app.get('/api/profile', async (req, res) => {
+  try {
+    const result = await pool.query('SELECT * FROM child_profile ORDER BY created_at DESC LIMIT 1');
+    if (result.rows.length === 0) {
+      return res.status(404).json({ error: 'Profile not found' });
+    }
+    const profile = result.rows[0];
+    res.status(200).json({
+      id: profile.id,
+      nickname: profile.nickname,
+      gender: profile.gender,
+      birthday: profile.birthday,
+      createdAt: profile.created_at,
+      updatedAt: profile.updated_at,
+    });
+  } catch (error) {
+    console.error('Error fetching profile:', error);
+    res.status(500).json({ error: 'Internal server error while fetching profile' });
+  }
+});
+
+app.put('/api/profile', async (req, res) => {
+  const { nickname, gender, birthday } = req.body;
+  
+  if (!nickname || !gender || !birthday) {
+    return res.status(400).json({ error: 'Nickname, gender, and birthday are required' });
+  }
+  
+  try {
+    const queryText = `
+      INSERT INTO child_profile (id, nickname, gender, birthday)
+      VALUES (1, $1, $2, $3)
+      ON CONFLICT (id) DO UPDATE SET
+        nickname = EXCLUDED.nickname,
+        gender = EXCLUDED.gender,
+        birthday = EXCLUDED.birthday,
+        updated_at = CURRENT_TIMESTAMP
+      RETURNING *
+    `;
+    const values = [nickname, gender, birthday];
+    const result = await pool.query(queryText, values);
+    
+    const profile = result.rows[0];
+    res.status(200).json({
+      id: profile.id,
+      nickname: profile.nickname,
+      gender: profile.gender,
+      birthday: profile.birthday,
+      createdAt: profile.created_at,
+      updatedAt: profile.updated_at,
+    });
+  } catch (error) {
+    console.error('Error updating profile:', error);
+    res.status(500).json({ error: 'Internal server error while updating profile' });
+  }
+});
+
 app.listen(port, () => {
   console.log(`Backend server is listening on port ${port}`);
 });
diff --git a/database-schema.sql b/database-schema.sql
new file mode 100644
index 0000000..30fa594
--- /dev/null
+++ b/database-schema.sql
@@ -0,0 +1,9 @@
+CREATE TABLE child_profile (
+    id INT PRIMARY KEY DEFAULT 1, -- プロフィールは1つだけなので、IDを1に固定
+    nickname VARCHAR(255),
+    gender VARCHAR(50),
+    birthday DATE,
+    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
+    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
+    CONSTRAINT single_profile_check CHECK (id = 1)                                                     
+);
diff --git a/frontend/src/App.tsx b/frontend/src/App.tsx
index d85cb39..a0da1ec 100644
--- a/frontend/src/App.tsx
+++ b/frontend/src/App.tsx
@@ -1,7 +1,7 @@
 import React from 'react'
 import { Container, Typography, Box, AppBar, Toolbar, Paper } from '@mui/material'
 import './App.css'
-import ChildBirthdayInput from './features/childProfile/ChildBirthdayInput'
+import ChildProfileForm from './features/childProfile/ChildProfileForm'
 import AddAchievementForm from './features/achievements/components/AddAchievementForm'
 import AchievementsList from './features/achievements/components/AchievementsList'
 
@@ -41,7 +41,7 @@ function App() {
       >
         <Box sx={{ my: 4 }}>
           <Paper elevation={2} sx={{ p: 3, mb: 3 }}>
-            <ChildBirthdayInput />
+            <ChildProfileForm />
           </Paper>
           <Paper elevation={2} sx={{ p: 3, mb: 3 }}>
             <AddAchievementForm />
diff --git a/frontend/src/features/childProfile/ChildBirthdayInput.tsx b/frontend/src/features/childProfile/ChildBirthdayInput.tsx
index da23bba..a2f62b4 100644
--- a/frontend/src/features/childProfile/ChildBirthdayInput.tsx
+++ b/frontend/src/features/childProfile/ChildBirthdayInput.tsx
@@ -1,7 +1,7 @@
 import React, { useState, useEffect } from "react"
 import { useDispatch, useSelector } from "react-redux"
 import { TextField, Button, Box, Typography } from "@mui/material"
-import type { AppDispatch, RootState } from "../../app/store"
+import type { AppDispatch } from "../../app/store"
 import { setBirthday, selectBirthday } from "./childProfileSlice"
 
 const ChildBirthdayInput: React.FC = () => {
diff --git a/frontend/src/features/childProfile/ChildProfileForm.tsx b/frontend/src/features/childProfile/ChildProfileForm.tsx
new file mode 100644
index 0000000..49f3250
--- /dev/null
+++ b/frontend/src/features/childProfile/ChildProfileForm.tsx
@@ -0,0 +1,120 @@
+import React, { useState, useEffect } from "react"
+import { useDispatch, useSelector } from "react-redux"
+import { TextField, Button, Box, Typography, FormControl, InputLabel, Select, MenuItem, CircularProgress } from "@mui/material"
+import type { AppDispatch } from "../../app/store"
+import { fetchProfile, updateProfile, selectProfile, selectProfileStatus, selectProfileError } from "./childProfileSlice"
+
+const ChildProfileForm: React.FC = () => {
+    const dispatch: AppDispatch = useDispatch()
+    const profile = useSelector(selectProfile)
+    const status = useSelector(selectProfileStatus)
+    const error = useSelector(selectProfileError)
+    
+    const [localNickname, setLocalNickname] = useState<string>("")
+    const [localGender, setLocalGender] = useState<string>("")
+    const [localBirthday, setLocalBirthday] = useState<string>("")
+
+    useEffect(() => {
+        dispatch(fetchProfile())
+    }, [dispatch])
+
+    useEffect(() => {
+        if (profile) {
+            setLocalNickname(profile.nickname || "")
+            setLocalGender(profile.gender || "")
+            setLocalBirthday(profile.birthday || "")
+        }
+    }, [profile])
+
+    const handleSaveProfile = () => {
+        if (!localNickname.trim()) {
+            alert("Please enter a nickname")
+            return
+        }
+        if (!localGender) {
+            alert("Please select a gender")
+            return
+        }
+        if (!/^\d{4}-\d{2}-\d{2}$/.test(localBirthday)) {
+            alert("Please enter a valid date in the format YYYY-MM-DD")
+            return
+        }
+
+        dispatch(updateProfile({
+            nickname: localNickname.trim(),
+            gender: localGender,
+            birthday: localBirthday
+        }))
+    }
+
+    return (
+        <Box sx={{ 
+            my: 2, 
+            p: 2, 
+            border: '1px solid',
+            borderColor: 'divider',
+            borderRadius: '8px',
+            backgroundColor: 'background.paper'
+        }}>
+            <Typography variant="h6" gutterBottom sx={{ color: '#4A4A4A', fontWeight: 600 }}>
+                Child Profile
+            </Typography>
+            
+            {error && (
+                <Typography color="error" sx={{ mb: 2 }}>
+                    Error: {error}
+                </Typography>
+            )}
+
+            <TextField
+                label="Nickname"
+                value={localNickname}
+                onChange={(e) => setLocalNickname(e.target.value)}
+                fullWidth
+                sx={{ mb: 2 }}
+                disabled={status === 'loading'}
+            />
+
+            <FormControl fullWidth sx={{ mb: 2 }}>
+                <InputLabel>Gender</InputLabel>
+                <Select
+                    value={localGender}
+                    label="Gender"
+                    onChange={(e) => setLocalGender(e.target.value)}
+                    disabled={status === 'loading'}
+                >
+                    <MenuItem value="male">Male</MenuItem>
+                    <MenuItem value="female">Female</MenuItem>
+                    <MenuItem value="other">Other</MenuItem>
+                </Select>
+            </FormControl>
+
+            <TextField
+                label="Birthday (YYYY-MM-DD)"
+                type="date"
+                value={localBirthday}
+                onChange={(e) => setLocalBirthday(e.target.value)}
+                InputLabelProps={{
+                    shrink: true,
+                }}
+                fullWidth
+                sx={{ mb: 2 }}
+                disabled={status === 'loading'}
+            />
+
+            <Button 
+                variant="contained" 
+                onClick={handleSaveProfile}
+                disabled={status === 'loading'}
+                sx={{
+                    backgroundColor: 'primary.main',
+                    color: 'text.primary',
+                }}
+            >
+                {status === 'loading' ? <CircularProgress size={24} /> : 'Save Profile'}
+            </Button>
+        </Box>
+    )
+}
+
+export default ChildProfileForm
diff --git a/frontend/src/features/childProfile/childProfileSlice.ts b/frontend/src/features/childProfile/childProfileSlice.ts
index 4108149..75d6db8 100644
--- a/frontend/src/features/childProfile/childProfileSlice.ts
+++ b/frontend/src/features/childProfile/childProfileSlice.ts
@@ -1,26 +1,75 @@
-import { createSlice } from "@reduxjs/toolkit"
+import { createSlice, createAsyncThunk } from "@reduxjs/toolkit"
 import type { PayloadAction } from "@reduxjs/toolkit"
 import type { RootState } from "../../app/store"
+import { fetchProfileAPI, updateProfileAPI } from "../../services/profileService"
+import type { ChildProfile } from "../../services/profileService"
 
 interface ChildProfileState {
+    profile: ChildProfile | null
+    status: 'idle' | 'loading' | 'succeeded' | 'failed'
+    error: string | null
     birthday: string | null
 }
 
 const initialState: ChildProfileState = {
+    profile: null,
+    status: 'idle',
+    error: null,
     birthday: null
 }
 
+export const fetchProfile = createAsyncThunk<ChildProfile>(
+    'childProfile/fetchProfile',
+    async () => {
+        const response = await fetchProfileAPI();
+        return response;
+    }
+);
+
+export const updateProfile = createAsyncThunk<ChildProfile, Omit<ChildProfile, 'id' | 'createdAt' | 'updatedAt'>>(
+    'childProfile/updateProfile',
+    async (profileData) => {
+        const response = await updateProfileAPI(profileData);
+        return response;
+    }
+);
+
 export const childProfileSlice = createSlice({
     name: "childProfile",
     initialState,
     reducers: {
         setBirthday: (state, action: PayloadAction<string | null>) => {
             state.birthday = action.payload
+            if (state.profile) {
+                state.profile.birthday = action.payload || ''
+            }
         }
+    },
+    extraReducers: (builder) => {
+        builder
+            .addCase(fetchProfile.pending, (state) => {
+                state.status = 'loading'
+            })
+            .addCase(fetchProfile.fulfilled, (state, action) => {
+                state.status = 'succeeded'
+                state.profile = action.payload
+                state.birthday = action.payload.birthday
+            })
+            .addCase(fetchProfile.rejected, (state, action) => {
+                state.status = 'failed'
+                state.error = action.error.message || 'Failed to fetch profile'
+            })
+            .addCase(updateProfile.fulfilled, (state, action) => {
+                state.profile = action.payload
+                state.birthday = action.payload.birthday
+            })
     }
 })
 
 export const { setBirthday } = childProfileSlice.actions
 export const selectBirthday = (state: RootState) => state.childProfile.birthday
+export const selectProfile = (state: RootState) => state.childProfile.profile
+export const selectProfileStatus = (state: RootState) => state.childProfile.status
+export const selectProfileError = (state: RootState) => state.childProfile.error
 export default childProfileSlice.reducer
 
diff --git a/frontend/src/services/profileService.ts b/frontend/src/services/profileService.ts
new file mode 100644
index 0000000..3088f32
--- /dev/null
+++ b/frontend/src/services/profileService.ts
@@ -0,0 +1,22 @@
+import axios from 'axios';
+
+const API_BASE_URL = import.meta.env?.VITE_API_BASE_URL || 'http://localhost:3000/api';
+
+export interface ChildProfile {
+  id: string;
+  nickname: string;
+  gender: string;
+  birthday: string;
+  createdAt: string;
+  updatedAt: string;
+}
+
+export const fetchProfileAPI = async (): Promise<ChildProfile> => {
+  const response = await axios.get<ChildProfile>(`${API_BASE_URL}/profile`);
+  return response.data;
+};
+
+export const updateProfileAPI = async (profileData: Omit<ChildProfile, 'id' | 'createdAt' | 'updatedAt'>): Promise<ChildProfile> => {
+  const response = await axios.put<ChildProfile>(`${API_BASE_URL}/profile`, profileData);
+  return response.data;
+};
diff --git a/frontend/src/types.ts b/frontend/src/types.ts
index fa56469..045c72a 100644
--- a/frontend/src/types.ts
+++ b/frontend/src/types.ts
@@ -16,4 +16,13 @@ export interface Achievement {
 
 export type NewAchievementPayload = Omit<Achievement, 'id'>
 
+export interface ChildProfile {
+    id: string
+    nickname: string
+    gender: string
+    birthday: string
+    createdAt: string
+    updatedAt: string
+}
+
 
-- 
2.34.1

